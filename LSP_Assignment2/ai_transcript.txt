AI Usage Summary
________________________________________________________________________________________________________________________________________________________________

I used ChatGPT to help break down the project into understandable pieces. It explained what each part 
of the assignment required and provided a suggested outline for my code, which made it easier 
to implement the ETL pipeline correctly.

Suggested Skeleton Outline Provided by ChatGPT:
________________________________________________________________________________________________________________________________________________________________
package org.howard.edu.lsp.assignment2;

import java.io.*;
import java.util.*;

public class ETLPipeline {
    public static void main(String[] args) {
        String inputPath = "data/products.csv";
        String outputPath = "data/transformed_products.csv";

        List<Product> products = extract(inputPath);
        List<ProductTransformed> transformedProducts = transform(products);
        load(transformedProducts, outputPath);

        System.out.println("Run summary:");
        System.out.println("Rows read: " + products.size());
        System.out.println("Rows transformed: " + transformedProducts.size());
        System.out.println("Output written to: " + outputPath);
    }

    // Extract
    public static List<Product> extract(String path) {
        List<Product> products = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(path))) {
            String line = br.readLine(); // skip header
            while ((line = br.readLine()) != null) {
                String[] fields = line.split(",");
                Product p = new Product(
                    Integer.parseInt(fields[0]),
                    fields[1],
                    Double.parseDouble(fields[2]),
                    fields[3]
                );
                products.add(p);
            }
        } catch (FileNotFoundException e) {
            System.out.println("Error: Input file 'data/products.csv' not found.");
            System.exit(1);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return products;
    }

    // Transform
    public static List<ProductTransformed> transform(List<Product> products) {
        List<ProductTransformed> transformed = new ArrayList<>();
        for (Product p : products) {
            // apply transformations here
        }
        return transformed;
    }

    // Load
    public static void load(List<ProductTransformed> products, String path) {
        // write header and data to CSV
    }
}

// You can define Product and ProductTransformed classes
________________________________________________________________________________________________________________________________________________________________
Example Prompt I Used:
________________________________________________________________________________________________________________________________________________________________
Why am I importing this:
import java.io.*;
import java.util.*;
import java.math.BigDecimal;
import java.math.RoundingMode;


ChatGPT’s Response (Summary):
-------------------------------
import java.io.*; → Provides file I/O classes used for reading and writing CSVs (BufferedReader, FileReader,
 BufferedWriter, FileWriter) and handling exceptions (IOException, FileNotFoundException).
 
import java.util.*; → Provides utility classes such as List, ArrayList, and Arrays for storing and manipulating data.

import java.math.BigDecimal; → Used for accurate decimal rounding in the round() helper method.

import java.math.RoundingMode; → Defines how to round decimals (e.g., HALF_UP for normal rounding rules).

Each import has a clear purpose in the ETL pipeline.
________________________________________________________________________________________________________________________________________________________________
How I Used ChatGPT for Debugging
________________________________________________________________________________________________________________________________________________________________
I also used ChatGPT to debug my code when it produced errors or unexpected output. For example, it identified these issues in my extract method:
Variable mismatch: Parameter Path (capital P) vs usage path (lowercase).
Incorrect readLine usage: Must be br.readLine() with parentheses.
Misspelled method: spilt() → should be split().
Misspelled Exception class: FileNotFoundExcepption → FileNotFoundException.
Mismatched braces { } in the extract method.
Method placement: load() and round() needed to be inside the ETLPipeline class.
ChatGPT not only pointed out these issues but also explained how to fix them and improve code structure. I used its
 guidance to ensure my program compiles, runs correctly, and produces the expected output.